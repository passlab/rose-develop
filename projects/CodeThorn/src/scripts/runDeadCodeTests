#!/bin/bash

OPTIONS="--normalize"

# test 1-9: normalization: YES
# test 10:  normalization: NO

TESTDIR=$1
echo "------------------------------------------------"
echo "running DEADCODE TESTS"
echo "------------------------------------------------"

# C++ tests
#    for p in 1 2 3 4 5 6 7 8 9; do

for p in 1 2 3 4 5 6 7 9; do
    rm -f tmptest.csv
    rm -f tmptest_col1.csv
    rm -f test${p}_col1.csv
    ./analyterix --csv-deadcode-unreachable=tmptest.csv ${OPTIONS} $TESTDIR/deadcode/test$p.C > /dev/null
	echo -n "DEADCODE test${p}.C : "
	#diff tmptest.csv $TESTDIR/deadcode/test$p.csv
    cut -d, -f1 tmptest.csv | sort > tmptest_col1.csv
    cut -d, -f1  $TESTDIR/deadcode/test$p.csv |sort > test${p}_col1.csv
    diff tmptest_col1.csv test${p}_col1.csv
	if [ ! $? -eq 0 ]
	then
	    echo "FAIL"
        exit 1
	else
	    echo "PASS"
	fi
	#echo "-------------------------------------------------"
done

# C tests
for p in 10; do
	#./analyterix --csv-deadcode-unreachable=tmptest.csv $OPTIONS $TESTDIR/deadcode/test$p.c
    ./analyterix --csv-deadcode-unreachable=tmptest.csv ${OPTIONS} $TESTDIR/deadcode/test$p.c > /dev/null
	echo -n "DEADCODE test${p}.c : "
    cut -d, -f1 tmptest.csv | sort > tmptest_col1.csv
    cut -d, -f1  $TESTDIR/deadcode/test$p.csv |sort > test${p}_col1.csv
    echo "SKIP"
    #diff tmptest_col1.csv test${p}_col1.csv
	#echo "-------------------------------------------------"
done
    
# C tests
for p in 11; do
	./analyterix --csv-deadcode-unreachable=tmptest.csv --ignore-unknown-functions $OPTIONS $TESTDIR/deadcode/test$p.C > /dev/null
    cut -d, -f1 tmptest.csv | sort > tmptest_col1.csv
    # no result file test11.csv available yet
    #cut -d, -f1  $TESTDIR/deadcode/test$p.csv |sort > test${p}_col1.csv
    #diff tmptest_col1.csv test${p}_col1.csv
	echo -n "DEADCODE test${p}.C : "
    echo "SKIP"
	#echo "-------------------------------------------------"
done

#    rm -f tmptest.csv
