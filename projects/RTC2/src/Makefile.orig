# Example Makefile for ROSE users
# This makefile is provided as an example of how to use ROSE when ROSE is
# installed (using "make install").  This makefile is tested as part of the
# "make distcheck" rule (run as part of tests before any CVS checkin).
# The test of this makefile can also be run by using the "make installcheck"
# rule (run as part of "make distcheck").


# Location of include directory after "make install"

ifeq ($(BOOST_HOME),)
  echo "setting default BOOST_HOME to /usr/include"
  BOOST_HOME=/usr
endif

ifeq ($(ROSE_ROOT),)
  echo "setting default ROSE_ROOT to ./rose"
  ROSE_ROOT=./rose
endif

ifeq ($(ROSE_HOME),)
  echo "setting default ROSE_HOME to $(ROSE_ROOT)/installtree"
  ROSE_HOME=$(ROSE_ROOT)/installtree)
endif

ifeq ($(ROSE_BUILD),)
  echo "setting default ROSE_HOME to $(ROSE_ROOT)/buildtree"
  ROSE_BUILD=$(ROSE_ROOT)/buildtree)
endif

ifeq ($(ROSE_SRC),)
  echo "setting default ROSE_SRC to $(ROSE_ROOT)"
  ROSE_SRC=$(ROSE_ROOT)
endif



# Location of Boost include directory
#BOOST_CPPFLAGS = -pthread -I/usr/include
<<<<<<< HEAD
BOOST_CPPFLAGS = -pthread -I$(BOOST_HOME)/include -L$(BOOST_HOME)/lib/ -lboost_iostreams -lboost_iostreams
=======
BOOST_CPPFLAGS = -pthread -I$(BOOST_HOME)/include
BOOST_LIBS = -l$(BOOST_HOME)/lib/libboost_iostreams.so -l$(BOOST_HOME)/lib/libboost_iostreams.so
>>>>>>> cf592f331c381e721388cfb3a1d8068ea24eceb6


# Location of Dwarf include and lib (if ROSE is configured to use Dwarf)
ROSE_INCLUDE_DIR = $(ROSE_HOME)/include


CC                    = gcc
CXX                   = g++
CPPFLAGS              =
#CXXCPPFLAGS           = @CXXCPPFLAGS@
CXXFLAGS              =  -ggdb -O0 -Wall -Wextra
LDFLAGS               =

# Location of library directory after "make install"
# ROSE_LIB_DIR = /opt/rose-edg4/install/lib

#ROSE_LIB_DIR = /opt/rose-edg4/build/src
ROSE_LIBS = $(ROSE_HOME)/lib/librose.la

ROSE_INCLUDES = \
     -I$(ROSE_INCLUDE_DIR) \
     -I$(ROSE_INCLUDE_DIR)/rose

SOURCES = \
			instrumenter/RTC.C \
			instrumenter/funcDecl.C \
			instrumenter/strDecl.C \
			instrumenter/util.C \
			instrumenter/preProcessAST.C \
			instrumenter/traverse.C \
			instrumenter/instr.C \
			instrumenter/instrBinaryOps.C \
			instrumenter/instrCallExps.C \
			instrumenter/instrDeclStmts.C \
			instrumenter/instrDeleteExps.C \
			instrumenter/instrNewExps.C \
			instrumenter/instrRefExps.C \
			instrumenter/instrRetStmts.C \
			instrumenter/instrScopeStmts.C \
			instrumenter/instrSizeOfOps.C \
			instrumenter/instrThisExps.C \
			instrumenter/instrUnaryOps.C \
			instrumenter/instrVarRefs.C \
			instrumenter/typechecking.C

HEADERS = \
			instrumenter/RTC.h \
			instrumenter/funcDecl.h \
			instrumenter/util.h \
			instrumenter/strDecl.h \
			instrumenter/preProcessAST.h \
			instrumenter/traverse.h \
			instrumenter/instr.h \
			instrumenter/typechecking.h

OBJECTS = $(SOURCES:instrumenter/%.C=%.lo)

RTED_TESTS =	\
		pointer_example.rtc.bin \
		pointer_example2.rtc.bin \
		pointer_example3.rtc.bin \
		pointer_example3_fixed.rtc.bin \
		pointer_example4.rtc.bin \
		pointer_example5.rtc.bin \
		pointer_example6.rtc.bin \
		pointer_example7.rtc.bin \
		pointer_example7_simplified.rtc.bin \
		pointer_example8.rtc.bin \
		pointer_example8_simplified.rtc.bin \
		pointer_example9.rtc.bin \
		pointer_example9_simplified.rtc.bin \
		arith_example4.rtc.bin \
		pointer_example11_simplified.rtc.bin \
		pointer_example10_simplified.rtc.bin \
		pointer_example12_simplified.rtc.bin \
		pointer_example13_simplified.rtc.bin \
		pointer_example14_simplified.rtc.bin \
		pointer_example15_simplified.rtc.bin \
		pointer_example16_simplified.rtc.bin \
		pointer_example17_array_test.rtc.bin \
		pointer_example18_array_arrow_test.rtc.bin \
		pointer_example_class.rtc.bin \
		pointer_example_class2.rtc.bin \
		pointer_example_class3.rtc.bin \
		pointer_example_class4.rtc.bin \
		pointer_example_class5.rtc.bin \
		pointer_example_class6.rtc.bin \
		pointer_example_class_structed.rtc.bin \
		pointer_example_class_cout.rtc.bin \
		pointer_example_class_void_lock.rtc.bin \
		pointer_example_class_void_lock_fn.rtc.bin \
		pointer_example_link_test.rtc.bin \
		pointer_example_int.rtc.bin \
		pointer_example_lock_key_test.rtc.bin \
		pointer_example_struct.rtc.bin \
		pointer_example_struct2.rtc.bin \
		pointer_example_struct_copy.rtc.bin \
		pointer_example_struct_copy_ret.rtc.bin \
		pointer_example_static.rtc.bin \
		pointer_example_simple_int.rtc.bin

# Default make rule to use
all: RTC
	@if [ x$${ROSE_IN_BUILD_TREE:+present} = xpresent ]; then echo "ROSE_IN_BUILD_TREE should not be set" >&2; exit 1; fi

check: $(RTED_TESTS)

# Example suffix rule for more experienced makefile users
# .C.o:
#	g++ -c -O0 -I$(ROSE_INCLUDE_DIR) -o $@ $(@:.o=.C)

# Compile the exampleTranslator using the file identityTranslator.C
%.lo: instrumenter/%.C $(HEADERS)
	/bin/bash $(ROSE_BUILD)/libtool --tag=CXX --mode=compile $(CXX) $(CXXFLAGS)  $(CPPFLAGS) $(ROSE_INCLUDES) $(BOOST_CPPFLAGS) -c -o $@ $<

RTC: $(OBJECTS)
<<<<<<< HEAD
	/bin/bash $(ROSE_BUILD)/libtool --tag=CXX --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@ $(OBJECTS) $(ROSE_LIBS) $(BOOST_CPPFLAGS)   

# /share/apps/tools/boost/1.50.0/lib/libboost_iostreams.so /share/apps/tools/boost/1.50.0/lib/libboost_iostreams.so.1.50.0
=======
	/bin/bash $(ROSE_BUILD)/libtool --tag=CXX --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@ $(OBJECTS) $(ROSE_LIBS) $(BOOST_LIBS)
>>>>>>> cf592f331c381e721388cfb3a1d8068ea24eceb6

#
# tests

# metadata lib
metadata_alt.o: metadata/metadata_alt.c metadata/metadata_alt.h
	$(CXX) -Wall -Wextra -c $<

# metadata lib
metalib_alt.o: metadata/metalib_alt.c metadata/metalib_alt.h
	$(CXX) -Wall -Wextra -c $<

# instrument codes
%.rtc.c: ../examples/%.c RTC
	./RTC $(ROSE_INCLUDES) -plain -rose:o $< $@

# compile instrumented codes
%.rtc.o: %.rtc.c
	$(CXX) -Wall -Wextra -c $< -o $@

# link instrumented codes
%.rtc.bin: %.rtc.o metadata_alt.o metadata_lib.o
	$(CXX) $< metadata_alt.o metadata_lib.o -o $@

#
# clean

clean:
	rm -rf .libs *.lo RTC *.o *.rtc.c *.rtc.o
